name: Projeto TechChallenge CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

    #ELiminando conflito de branch concorrendo no workflow, assim ele cancela o mais antigo e mantem o mais novo.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
#add controle de vercionamento
  versionamento:
    runs-on: ubuntu-latest
    name: Versionamento

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0 #historico de commits, assim fazendo o recalculo da versão

      - uses: codacy/git-version@2.8.0
        id: version
        with:
          release-branch: main #podendo variar com main master
          prefix: v

      - name: Tag do repositorio
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "::notice:: ${{ steps.version.outputs.version }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git tag -a "${{ steps.version.outputs.version }}" -m "Release ${{ steps.version.outputs.version }}"
          git push --tags
        if: github.ref == 'refs/heads/main'


  Backend-build-and-test:
    needs: versionamento  #só faço o build e test se o job de versionamento for bem sucedido
    runs-on: ubuntu-latest
    name: Backend Build and Test Project

    steps:
      # Checkout código
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configuração do ambiente .NET Core
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
          cache: true
          cache-dependency-path: './01_WebApi/packages.lock.json'

      - name: Restore
        run: |
          dotnet restore ./Fase1TechChallenge.sln

      - name: Build
        run: |
          dotnet build --no-restore --configuration Release ./Fase1TechChallenge.sln

      - name: Test
        run: |
          dotnet test --no-build --no-restore ./Fase1TechChallenge.sln --configuration Release --logger trx --results-directory "TestsResults"
      
      # Upload dos resultados dos testes
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-test-results
          path: TestsResults

  backend-lint:
    needs: versionamento
    runs-on: ubuntu-latest
    name: Backend Lint Project
    
    steps:
              # Checkout código
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: github/super-linter@v6
        env:
          DEFAULT_BRANCH: "main"
          VALIDATE_ALL_CODEBASE: "false"
          VALIDATE_YAML: "true"
          validate_csharp: "true"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  #veirificar dependencias com vulnerabilidades conhecidas
  dependecy-check:
    needs: versionamento
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/dependency-review-action@v4
        with:
          comment-summary-in-pr: always
          base-ref: main
          head-ref: main
          
  code-security-check:
    needs: versionamento
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read


    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x' 

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: csharp
          build-mode: manual

      - name: Build C# code manually
        run: |
          echo 'Starting manual build for C# code...'
          dotnet restore
          dotnet build --configuration Release
          echo 'Manual build complete.'

      - uses: github/codeql-action/analyze@v3
        name: Analyze code - Backend
        with:
          category: "/language:csharp"

      